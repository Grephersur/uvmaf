--- VulnerabilityManagement.ps1.original
+++ VulnerabilityManagement.ps1.fixed
@@ -1166,7 +1166,13 @@ function Run-ScopeValidations { param([array]$VulnData)
         if($deg -gt 8){ $deg = 8 } # cap at 8 to avoid I/O thrash on most systems
         
         $iss = [System.Management.Automation.Runspaces.InitialSessionState]::CreateDefault()
-        # CORRECTED: This is the proper way to add a module to the InitialSessionState
-        $iss.Modules.Add((New-Object System.Management.Automation.Runspaces.SessionStateModuleEntry('ImportExcel')))
+        # FIXED: Use ImportPSModule method instead of trying to create SessionStateModuleEntry
+        try {
+            $iss.ImportPSModule('ImportExcel')
+        } catch {
+            # Module will be imported in runspace if this fails
+            Write-Log "Could not pre-import ImportExcel module into ISS, will import in runspace" -Level WARN
+        }
 
         $pool = [runspacefactory]::CreateRunspacePool(1,$deg,$iss,$Host)
         $pool.Open()
@@ -1185,6 +1191,14 @@ function Run-ScopeValidations { param([array]$VulnData)
             $null = $ps.AddScript({
                 param($scopeFile, $lookup, $configParam, $fastModeParam, $skipFormattingParam)
                 
+                # Ensure ImportExcel is loaded in this runspace
+                if (-not (Get-Module -Name ImportExcel)) {
+                    try {
+                        Import-Module ImportExcel -DisableNameChecking -ErrorAction Stop
+                    } catch {
+                        throw "Failed to import ImportExcel module in runspace: $_"
+                    }
+                }
+                
                 # Set variables required by the functions within the runspace
                 $script:Config = $configParam
                 $script:FastMode = $fastModeParam